{"version":3,"sources":["HourRow/HourRow.jsx","App/App.js","Header/Header.jsx","reportWebVitals.js","index.js"],"names":["classes","past","backgroundColor","present","future","HourRow","props","useState","text","textVal","setTextVal","timeNow","Number","moment","format","className","id","currentHour","value","onChange","e","target","type","style","onClick","newHourTask","hourTask","map","hourTaskObject","hour","console","log","setHourTask","localStorage","setItem","JSON","stringify","App","parse","getItem","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAIMA,EAAU,CACdC,KAAM,CACJC,gBAAiB,UAEnBC,QAAS,CACPD,gBAAiB,QAEnBE,OAAQ,CACNF,gBAAiB,SAyCNG,MArCf,SAAiBC,GAAQ,IAAD,EACQC,mBAASD,EAAME,MADvB,mBACfC,EADe,KACNC,EADM,KAEhBC,EAAUC,OAAOC,MAASC,OAAO,MAgBvC,OACE,sBAAKC,UAAU,MAAMC,GAAIV,EAAMW,YAA/B,UACE,uBAAOF,UAAU,gBAAjB,SAAkCT,EAAMW,YAAc,QAEtD,0BACAC,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAAWU,EAAEC,OAAOH,QACnCF,GAAE,UAAKV,EAAMW,YAAX,cACFK,KAAK,OACLP,UAAU,uBACVQ,MAAOjB,EAAMW,cAAgBN,EAAUX,EAAQG,QAAUG,EAAMW,YAAcN,EAAUX,EAAQI,OAASJ,EAAQC,OAIhH,yBAAQuB,QA5BI,WACd,IAAIC,EAAcnB,EAAMoB,SAASC,KAAI,SAAAC,GACnC,OAAIA,EAAeC,OAASvB,EAAMW,YACzB,2BAAKW,GAAZ,IAA4BpB,KAAMC,IAE3BmB,KAGXE,QAAQC,IAAIN,GAEZnB,EAAM0B,YAAYP,GAClBQ,aAAaC,QAAQ,OAAQC,KAAKC,UAAUX,KAiBhBH,KAAK,SAASP,UAAU,mBAAlD,iBAAyE,mBAAGA,UAAU,4BCX7EsB,MAjCf,WAAgB,IAAD,EACmB9B,mBAAS4B,KAAKG,MAAML,aAAaM,QAAQ,UAAU,CACjF,CAACV,KAAK,EAAGrB,KAAM,IACf,CAACqB,KAAK,EAAGrB,KAAM,IACf,CAACqB,KAAK,GAAIrB,KAAM,IAChB,CAACqB,KAAK,GAAIrB,KAAM,IAChB,CAACqB,KAAK,GAAIrB,KAAM,IAChB,CAACqB,KAAK,EAAGrB,KAAM,IACf,CAACqB,KAAK,EAAGrB,KAAM,IACf,CAACqB,KAAK,EAAGrB,KAAM,IACf,CAACqB,KAAK,EAAGrB,KAAM,IACf,CAACqB,KAAK,EAAGrB,KAAM,MAXJ,mBACNkB,EADM,KACIM,EADJ,KAeb,OADAF,QAAQC,IAAIL,GAEV,qBAAKX,UAAU,MAAf,SAEIW,EAASC,KAAI,YAAmB,IAAjBE,EAAgB,EAAhBA,KAAMrB,EAAU,EAAVA,KACnB,OACE,cAAC,EAAD,CACES,YAAaY,EACbrB,KAAMA,EAENkB,SAAUA,EACVM,YAAaA,GAFRH,S,gBCZJW,MAXf,WACI,OACI,yBAAQzB,UAAU,YAAlB,UACF,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,gEACA,cAAC,IAAD,CAAQD,OAAO,8BACf,mBAAGC,UAAU,aCEJ0B,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,MCEdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.55295f38.chunk.js","sourcesContent":["import moment from \"moment\";\nimport React from \"react\";\nimport { useState } from 'react';\n\nconst classes = {\n  past: {\n    backgroundColor: \"tomato\"\n  },\n  present: {\n    backgroundColor: \"aqua\"\n  },\n  future: {\n    backgroundColor: \"teal\"\n  }\n}\n\nfunction HourRow(props) {\n  const [textVal, setTextVal] = useState(props.text)\n  const timeNow = Number(moment().format(\"h\"));\n\n  const saveBtn = () => {\n    let newHourTask = props.hourTask.map(hourTaskObject => {\n      if (hourTaskObject.hour === props.currentHour) {\n        return { ...hourTaskObject, text: textVal }\n      } else {\n        return hourTaskObject\n      }\n    })\n    console.log(newHourTask);\n\n    props.setHourTask(newHourTask)\n    localStorage.setItem(\"time\", JSON.stringify(newHourTask));\n  }\n\n  return (\n    <div className=\"row\" id={props.currentHour}>\n      <label className=\"col-sm-1 hour\">{props.currentHour + ':00'}</label>\n\n      <textarea \n      value={textVal} \n      onChange={e => setTextVal(e.target.value)} \n      id={`${props.currentHour}-hour-task`} \n      type=\"text\" \n      className=\"col-md-10 time-block\"\n      style={props.currentHour === timeNow ? classes.present : props.currentHour > timeNow ? classes.future : classes.past}\n      >\n      </textarea>\n\n      <button onClick={saveBtn} type=\"submit\" className=\"saveBtn col-sm-1\">SAVE<i className=\"fas fa-save save\"></i></button>\n    </div>\n  );\n}\n\nexport default HourRow;","import React, { useState } from \"react\";\nimport '../App/App.css';\nimport HourRow from '../HourRow/HourRow';\n\nfunction App() {\n  const [hourTask, setHourTask] = useState(JSON.parse(localStorage.getItem(\"time\"))||[\n    {hour:8, text: \"\" },\n    {hour:9, text: \"\" },\n    {hour:10, text: \"\" },\n    {hour:11, text: \"\" },\n    {hour:12, text: \"\" },\n    {hour:1, text: \"\" },\n    {hour:2, text: \"\" },\n    {hour:3, text: \"\" },\n    {hour:4, text: \"\" },\n    {hour:5, text: \"\" }\n  ]);\n\n  console.log(hourTask);\n  return (\n    <div className=\"App\">\n      {\n        hourTask.map(({hour, text}) => {\n          return (\n            <HourRow\n              currentHour={hour}\n              text={text}\n              key={hour}\n              hourTask={hourTask}\n              setHourTask={setHourTask} />\n          )\n        }\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport Moment from \"react-moment\";\n\n\nfunction Header() {\n    return (\n        <header className=\"jumbotron\">\n      <h1 className=\"display-3\">Work Day Scheduler</h1>\n      <p className=\"lead\">A simple calendar app for scheduling your work day</p>\n      <Moment format=\"dddd MMMM Do YYYY, h:mm a\"></Moment>\n      <p className=\"lead\"></p>\n    </header>\n    )\n}\n\nexport default Header;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport Header from './Header/Header';\nimport './Header/Header.css';\nimport './HourRow/HourRow.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}