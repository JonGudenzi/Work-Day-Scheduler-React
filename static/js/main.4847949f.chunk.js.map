{"version":3,"sources":["HourRow/HourRow.jsx","App/App.js","Header/Header.jsx","reportWebVitals.js","index.js"],"names":["HourRow","props","console","log","text","useState","textVal","setTextVal","className","id","currentHour","value","onChange","e","target","type","onClick","newVal","hourTask","filter","hourTime","hour","oldVals","newArr","sort","a","b","setHourTask","localStorage","setItem","JSON","stringify","App","parse","getItem","map","Header","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA8BeA,MA1Bf,SAAiBC,GACfC,QAAQC,IAAIF,EAAMG,MADI,MAEQC,mBAASJ,EAAMG,MAFvB,mBAEfE,EAFe,KAENC,EAFM,KAiBtB,OACE,sBAAKC,UAAU,MAAMC,GAAIR,EAAMS,YAA/B,UACE,uBAAOF,UAAU,gBAAjB,SAAkCP,EAAMS,YAAc,QACtD,0BAAUC,MAAOL,EAASM,SAAU,SAAAC,GAAC,OAAIN,EAAWM,EAAEC,OAAOH,QAAQF,GAAE,UAAKR,EAAMS,YAAX,cAAoCK,KAAK,OAAOP,UAAU,yBACjI,yBAAQQ,QAjBI,WACd,IAAIC,EAAShB,EAAMiB,SAASC,QAAO,SAAAC,GAAQ,OAAIA,EAASC,OAASpB,EAAMS,eAEvEO,EAAO,GAAGb,KAAOE,EAEjB,IAAMgB,EAAUrB,EAAMiB,SAASC,QAAO,SAAAC,GAAQ,OAAIA,EAASC,OAASpB,EAAMS,eAEpEa,EAAS,sBAAID,GAAJ,YAAgBL,IAAQO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEJ,KAAOK,EAAEL,QACjEpB,EAAM0B,YAAYJ,GAClBK,aAAaC,QAAQ,OAAQC,KAAKC,UAAUR,KAQhBR,KAAK,SAASP,UAAU,mBAAlD,iBAAyE,mBAAGA,UAAU,4BCY7EwB,MAjCf,WAAgB,IAAD,EACmB3B,mBAASyB,KAAKG,MAAML,aAAaM,QAAQ,UAAU,CACjF,CAACb,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,MAXL,mBACNc,EADM,KACIS,EADJ,KAeb,OADAzB,QAAQC,IAAIe,GAEV,qBAAKV,UAAU,MAAf,SAEIU,EAASiB,KAAI,YAAmB,IAAjBd,EAAgB,EAAhBA,KAAMjB,EAAU,EAAVA,KACnB,OACE,cAAC,EAAD,CACEM,YAAaW,EACbjB,KAAMA,EAENc,SAAUA,EACVS,YAAaA,GAFRN,S,gBCZJe,MAXf,WACI,OACI,yBAAQ5B,UAAU,YAAlB,UACF,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,gEACA,cAAC,IAAD,CAAQ6B,OAAO,8BACf,mBAAG7B,UAAU,aCEJ8B,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,MCEdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4847949f.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\n// import background from \"/public/img/beach.jpg\";\n\nfunction HourRow(props) {\n  console.log(props.text)\n  const [textVal, setTextVal] = useState(props.text)\n\n  const saveBtn = () => {\n    let newVal = props.hourTask.filter(hourTime => hourTime.hour === props.currentHour);\n\n    newVal[0].text = textVal;\n\n    const oldVals = props.hourTask.filter(hourTime => hourTime.hour !== props.currentHour);\n\n    const newArr = [...oldVals, ...newVal].sort((a, b) => a.hour - b.hour)\n    props.setHourTask(newArr)\n    localStorage.setItem(\"time\", JSON.stringify(newArr));\n\n  }\n\n  return (\n    <div className=\"row\" id={props.currentHour}>\n      <label className=\"col-sm-1 hour\">{props.currentHour + ':00'}</label>\n      <textarea value={textVal} onChange={e => setTextVal(e.target.value)} id={`${props.currentHour}-hour-task`} type=\"text\" className=\"col-md-10 time-block\"></textarea>\n      <button onClick={saveBtn} type=\"submit\" className=\"saveBtn col-sm-1\">SAVE<i className=\"fas fa-save save\"></i></button>\n    </div>\n  );\n}\n\nexport default HourRow;","import React, { useState } from \"react\";\nimport '../App/App.css';\nimport HourRow from '../HourRow/HourRow';\n\nfunction App() {\n  const [hourTask, setHourTask] = useState(JSON.parse(localStorage.getItem(\"time\"))||[\n    {hour:8, text: \"\" },\n    {hour:9, text: \"\" },\n    {hour:10, text: \"\" },\n    {hour:11, text: \"\" },\n    {hour:12, text: \"\" },\n    {hour:13, text: \"\" },\n    {hour:14, text: \"\" },\n    {hour:15, text: \"\" },\n    {hour:16, text: \"\" },\n    {hour:17, text: \"\" }\n  ]);\n\n  console.log(hourTask);\n  return (\n    <div className=\"App\">\n      {\n        hourTask.map(({hour, text}) => {\n          return (\n            <HourRow\n              currentHour={hour}\n              text={text}\n              key={hour}\n              hourTask={hourTask}\n              setHourTask={setHourTask} />\n          )\n        }\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport Moment from \"react-moment\";\n\n\nfunction Header() {\n    return (\n        <header className=\"jumbotron\">\n      <h1 className=\"display-3\">Work Day Scheduler</h1>\n      <p className=\"lead\">A simple calendar app for scheduling your work day</p>\n      <Moment format=\"dddd MMMM Do YYYY, h:mm a\"></Moment>\n      <p className=\"lead\"></p>\n    </header>\n    )\n}\n\nexport default Header;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport Header from './Header/Header';\nimport './Header/Header.css';\nimport './HourRow/HourRow.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}