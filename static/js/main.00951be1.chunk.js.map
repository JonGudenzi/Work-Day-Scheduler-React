{"version":3,"sources":["HourRow/HourRow.jsx","App/App.js","Header/Header.jsx","reportWebVitals.js","index.js"],"names":["HourRow","props","console","log","text","useState","textVal","setTextVal","className","id","currentHour","value","onChange","e","target","type","onClick","newHourTask","hourTask","map","hourTaskObject","hour","setHourTask","localStorage","setItem","JSON","stringify","App","parse","getItem","Header","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA+BeA,MA3Bf,SAAiBC,GACfC,QAAQC,IAAIF,EAAMG,MADI,MAEQC,mBAASJ,EAAMG,MAFvB,mBAEfE,EAFe,KAENC,EAFM,KAkBtB,OACE,sBAAKC,UAAU,MAAMC,GAAIR,EAAMS,YAA/B,UACE,uBAAOF,UAAU,gBAAjB,SAAkCP,EAAMS,YAAc,QACtD,0BAAUC,MAAOL,EAASM,SAAU,SAAAC,GAAC,OAAIN,EAAWM,EAAEC,OAAOH,QAAQF,GAAE,UAAKR,EAAMS,YAAX,cAAoCK,KAAK,OAAOP,UAAU,yBACjI,yBAAQQ,QAlBI,WAClB,IAAIC,EAAchB,EAAMiB,SAASC,KAAI,SAAAC,GACnC,OAAIA,EAAeC,OAASpB,EAAMS,YACzB,2BAAIU,GAAX,IAA2BhB,KAAME,IAE1Bc,KAGXlB,QAAQC,IAAIc,GAERhB,EAAMqB,YAAYL,GAClBM,aAAaC,QAAQ,OAAQC,KAAKC,UAAUT,KAOhBF,KAAK,SAASP,UAAU,mBAAlD,iBAAyE,mBAAGA,UAAU,4BCW7EmB,MAjCf,WAAgB,IAAD,EACmBtB,mBAASoB,KAAKG,MAAML,aAAaM,QAAQ,UAAU,CACjF,CAACR,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,GAAIjB,KAAM,IAChB,CAACiB,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,EAAGjB,KAAM,IACf,CAACiB,KAAK,EAAGjB,KAAM,MAXJ,mBACNc,EADM,KACII,EADJ,KAeb,OADApB,QAAQC,IAAIe,GAEV,qBAAKV,UAAU,MAAf,SAEIU,EAASC,KAAI,YAAmB,IAAjBE,EAAgB,EAAhBA,KAAMjB,EAAU,EAAVA,KACnB,OACE,cAAC,EAAD,CACEM,YAAaW,EACbjB,KAAMA,EAENc,SAAUA,EACVI,YAAaA,GAFRD,S,gBCZJS,MAXf,WACI,OACI,yBAAQtB,UAAU,YAAlB,UACF,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,gEACA,cAAC,IAAD,CAAQuB,OAAO,8BACf,mBAAGvB,UAAU,aCEJwB,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,MCEdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00951be1.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\n// import background from \"/public/img/beach.jpg\";\n\nfunction HourRow(props) {\n  console.log(props.text)\n  const [textVal, setTextVal] = useState(props.text)\n\n  const saveBtn = () => {\nlet newHourTask = props.hourTask.map(hourTaskObject => {\n  if (hourTaskObject.hour === props.currentHour){\n    return {...hourTaskObject, text: textVal}\n  }else{\n    return hourTaskObject\n  }\n})   \nconsole.log(newHourTask);\n\n    props.setHourTask(newHourTask)\n    localStorage.setItem(\"time\", JSON.stringify(newHourTask));\n  }\n\n  return (\n    <div className=\"row\" id={props.currentHour}>\n      <label className=\"col-sm-1 hour\">{props.currentHour + ':00'}</label>\n      <textarea value={textVal} onChange={e => setTextVal(e.target.value)} id={`${props.currentHour}-hour-task`} type=\"text\" className=\"col-md-10 time-block\"></textarea>\n      <button onClick={saveBtn} type=\"submit\" className=\"saveBtn col-sm-1\">SAVE<i className=\"fas fa-save save\"></i></button>\n    </div>\n  );\n}\n\nexport default HourRow;","import React, { useState } from \"react\";\nimport '../App/App.css';\nimport HourRow from '../HourRow/HourRow';\n\nfunction App() {\n  const [hourTask, setHourTask] = useState(JSON.parse(localStorage.getItem(\"time\"))||[\n    {hour:8, text: \"\" },\n    {hour:9, text: \"\" },\n    {hour:10, text: \"\" },\n    {hour:11, text: \"\" },\n    {hour:12, text: \"\" },\n    {hour:1, text: \"\" },\n    {hour:2, text: \"\" },\n    {hour:3, text: \"\" },\n    {hour:4, text: \"\" },\n    {hour:5, text: \"\" }\n  ]);\n\n  console.log(hourTask);\n  return (\n    <div className=\"App\">\n      {\n        hourTask.map(({hour, text}) => {\n          return (\n            <HourRow\n              currentHour={hour}\n              text={text}\n              key={hour}\n              hourTask={hourTask}\n              setHourTask={setHourTask} />\n          )\n        }\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport Moment from \"react-moment\";\n\n\nfunction Header() {\n    return (\n        <header className=\"jumbotron\">\n      <h1 className=\"display-3\">Work Day Scheduler</h1>\n      <p className=\"lead\">A simple calendar app for scheduling your work day</p>\n      <Moment format=\"dddd MMMM Do YYYY, h:mm a\"></Moment>\n      <p className=\"lead\"></p>\n    </header>\n    )\n}\n\nexport default Header;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport Header from './Header/Header';\nimport './Header/Header.css';\nimport './HourRow/HourRow.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}